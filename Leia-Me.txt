

        Estas fontes foram criadas por Maickonn Richard.
	Contato: maickonnrichard@gmail.com

        A distribuição destas fontes são gratuitas!

	NÃO ME RESPONSABILIZO PELO MAU USO DESTAS FONTES.

	GitHub: https://www.github.com/Maickonn

------------------------------------------------------------------------------


Provavelmente quando você abrir o projeto, vai aparecer uma mensagem falando que falta componente.
O que você deve fazer é seguir os seguintes passos:


-> Delphi 7:
* Com o Delphi aberto, vá ao menu "Component"
* Em seguida clique em "Install Packages..."
* Clique no botão "Add"
* Vá no diretório onde o Delphi está instalado e entre na pasta "Bin". ( C:\Program Files (x86)\Borland\Delphi7\Bin )
* Selecione o arquivo "dclsockets70.bpl" e clique em Abrir.
* Feche o Delphi e abra o projeto novamente.

-> Delphi XE5:
* Com o Delphi aberto, vá ao menu "Component"
* Em seguida clique em "Install Packages..."
* Clique no botão "Add"
* Vá no diretório onde o Delphi está instalado e entre na pasta "Bin". ( C:\Program Files (x86)\Embarcadero\RAD Studio\12.0\bin )
* Selecione o arquivo "dclsockets190.bpl" e clique em Abrir.
* Feche o Delphi e abra o projeto novamente.


Na pasta Units, você encontrará:

* Unit zLibEx.pas com a pasta zLib - Usada para comprimir dados. (Você deve copiar a pasta zLib para dentro do Projeto).
* StreamManager.pas - Criada para capturar a tela, e fazer a comparação.
* SndKeys32.pas - Serve para simular tecla pressionada.




-----------------------------------------------------------------------------

Entendendo o funcionamento do Software.

* Cliente conecta com o servidor. Ao conectar o primeiro Socket ele irá conectar os outros,
que definem se vai ser para transferência de imagens, download e upload de arquivos ou de teclado remoto.
O primeiro Socket transfere mensagens, a posição, e o clique do mouse.

* Servidor pede a primeira imagem. Cliente irá capturar a tela (Captura é feita em Bitmap, 8bit para reduzir o tamanho)
então ele irá receber uma compressão zLib. Após a compressão irá enviar a primeira
imagem e logo após salvará a mesma na memória.
Quando o servidor receber a imagem ele irá requisitar outra, onde o cliente irá comparar com a antiga e enviar só
o que foi alterado. (Sempre comprimindo os dados).